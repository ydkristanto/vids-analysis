---
title: "Data Collection"
author: "Yosep Dwi Kristanto"
date: 2024-01-06
format:
  pdf:
    papersize: a4
    number-sections: true
    geometry: 
      - top=30mm
      - left=30mm
      - bottom=30mm
      - right=30mm
editor: visual
---

```{r}
#| label: setup
#| include: false

library(tidyverse)
library(jsonlite)
```

# Audience Retention

## Function

### 2020

Retrieving audience retention data of videos from subtopic 2.1 Fungsi. The data was retrieved on 6 January 2024.

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_2.1.1 <- fromJSON("datasets/retention_2020_7g35w-sL_JA.json",
                             flatten = TRUE)
ret20_json_2.1.2 <- fromJSON("datasets/retention_2020_a3pMCY75leA.json",
                             flatten = TRUE)
ret20_json_2.1.3 <- fromJSON("datasets/retention_2020_qmTXyVwt0F4.json",
                             flatten = TRUE)
ret20_json_2.1.4 <- fromJSON("datasets/retention_2020_BB7a6alY_Kg.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_2.1 <- rbind_pages(
  list(as.data.frame(ret20_json_2.1.1$rows),
       as.data.frame(ret20_json_2.1.2$rows),
       as.data.frame(ret20_json_2.1.3$rows),
       as.data.frame(ret20_json_2.1.4$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_2.1[,c(2, 3, 4)] = apply(retention_2020_2.1[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_2.1)
```

Retrieving audience retention data of videos from subtopic 2.2 Grafik Fungsi. The data was retrieved on 7 January 2024.

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_2.2.1 <- fromJSON("datasets/retention_2020_aHo1kbccgLM.json",
                             flatten = TRUE)
ret20_json_2.2.2 <- fromJSON("datasets/retention_2020_Lmx4Bc7WhHU.json",
                             flatten = TRUE)
ret20_json_2.2.3 <- fromJSON("datasets/retention_2020_Aa1Zd1nqAaM.json",
                             flatten = TRUE)
ret20_json_2.2.4 <- fromJSON("datasets/retention_2020_2Xjq_Rc8csw.json",
                             flatten = TRUE)
ret20_json_2.2.5 <- fromJSON("datasets/retention_2020_n_QVgE8mGic.json",
                             flatten = TRUE)
ret20_json_2.2.6 <- fromJSON("datasets/retention_2020_aMwB3YzdnLY.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_2.2 <- rbind_pages(
  list(as.data.frame(ret20_json_2.2.1$rows),
       as.data.frame(ret20_json_2.2.2$rows),
       as.data.frame(ret20_json_2.2.3$rows),
       as.data.frame(ret20_json_2.2.4$rows),
       as.data.frame(ret20_json_2.2.5$rows),
       as.data.frame(ret20_json_2.2.6$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_2.2[,c(2, 3, 4)] = apply(retention_2020_2.2[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_2.2)
```

Retrieving audience retention data of videos from subtopic 2.3 Informasi Penting Grafik Fungsi. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=elapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DMD5LDDmH3Lo%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_2.3.1 <- fromJSON("datasets/retention_2020_MD5LDDmH3Lo.json",
                             flatten = TRUE)
ret20_json_2.3.2 <- fromJSON("datasets/retention_2020_pSPHTfd-GA4.json",
                             flatten = TRUE)
ret20_json_2.3.3 <- fromJSON("datasets/retention_2020_288bRpvZSsg.json",
                             flatten = TRUE)
ret20_json_2.3.4 <- fromJSON("datasets/retention_2020_AmIW3vUhY0E.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_2.3 <- rbind_pages(
  list(as.data.frame(ret20_json_2.3.1$rows),
       as.data.frame(ret20_json_2.3.2$rows),
       as.data.frame(ret20_json_2.3.3$rows),
       as.data.frame(ret20_json_2.3.4$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_2.3[,c(2, 3, 4)] = apply(retention_2020_2.3[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_2.3)
```

Retrieving audience retention data of videos from subtopic 2.4 Fungsi Linear dan Modelnya. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3Dtsca4HeUPyA%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_2.4.1 <- fromJSON("datasets/retention_2020_LIkQgdMtovQ.json",
                             flatten = TRUE)
ret20_json_2.4.2 <- fromJSON("datasets/retention_2020_b8SV9Xk5P0Q.json",
                             flatten = TRUE)
ret20_json_2.4.3 <- fromJSON("datasets/retention_2020_tsca4HeUPyA.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_2.4 <- rbind_pages(
  list(as.data.frame(ret20_json_2.4.1$rows),
       as.data.frame(ret20_json_2.4.2$rows),
       as.data.frame(ret20_json_2.4.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_2.4[,c(2, 3, 4)] = apply(retention_2020_2.4[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_2.4)
```

Retrieving audience retention data of videos from subtopic 2.5 Transformasi Fungsi. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DBYRBjDIZSZo%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_2.5.1 <- fromJSON("datasets/retention_2020_jytZgg-oQyM.json",
                             flatten = TRUE)
ret20_json_2.5.2 <- fromJSON("datasets/retention_2020_rZEOxQWltIs.json",
                             flatten = TRUE)
ret20_json_2.5.3 <- fromJSON("datasets/retention_2020_5flm8zGveZ8.json",
                             flatten = TRUE)
ret20_json_2.5.4 <- fromJSON("datasets/retention_2020_d2wI1ikAAlg.json",
                             flatten = TRUE)
ret20_json_2.5.5 <- fromJSON("datasets/retention_2020_A4gZgqEKshw.json",
                             flatten = TRUE)
ret20_json_2.5.6 <- fromJSON("datasets/retention_2020_BYRBjDIZSZo.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_2.5 <- rbind_pages(
  list(as.data.frame(ret20_json_2.5.1$rows),
       as.data.frame(ret20_json_2.5.2$rows),
       as.data.frame(ret20_json_2.5.3$rows),
       as.data.frame(ret20_json_2.5.4$rows),
       as.data.frame(ret20_json_2.5.5$rows),
       as.data.frame(ret20_json_2.5.6$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_2.5[,c(2, 3, 4)] = apply(retention_2020_2.5[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_2.5)
```

Retrieving audience retention data of videos from subtopic 2.6 Kombinasi Beberapa Fungsi. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DoKlJDBsc_A0%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_2.6.1 <- fromJSON("datasets/retention_2020_oKlJDBsc_A0.json",
                             flatten = TRUE)
ret20_json_2.6.2 <- fromJSON("datasets/retention_2020_FRgbKVwKp3M.json",
                             flatten = TRUE)
ret20_json_2.6.3 <- fromJSON("datasets/retention_2020_IYSIzMNvT0k.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_2.6 <- rbind_pages(
  list(as.data.frame(ret20_json_2.6.1$rows),
       as.data.frame(ret20_json_2.6.2$rows),
       as.data.frame(ret20_json_2.6.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_2.6[,c(2, 3, 4)] = apply(retention_2020_2.6[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_2.6)
```

Retrieving audience retention data of videos from subtopic 2.7 Fungsi Satu-Satu dan Inversnya. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DriRa1fv7XAo%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_2.7.1 <- fromJSON("datasets/retention_2020_hcUC4IFisL4.json",
                             flatten = TRUE)
ret20_json_2.7.2 <- fromJSON("datasets/retention_2020_o7p5-2gqPc4.json",
                             flatten = TRUE)
ret20_json_2.7.3 <- fromJSON("datasets/retention_2020_k_krAa5BcUc.json",
                             flatten = TRUE)
ret20_json_2.7.4 <- fromJSON("datasets/retention_2020_2Ftvle6k9as.json",
                             flatten = TRUE)
ret20_json_2.7.5 <- fromJSON("datasets/retention_2020_riRa1fv7XAo.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_2.7 <- rbind_pages(
  list(as.data.frame(ret20_json_2.7.1$rows),
       as.data.frame(ret20_json_2.7.2$rows),
       as.data.frame(ret20_json_2.7.3$rows),
       as.data.frame(ret20_json_2.7.4$rows),
       as.data.frame(ret20_json_2.7.5$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_2.7[,c(2, 3, 4)] = apply(retention_2020_2.7[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_2.7)
```

Combining subtopic data into one topic.

```{r}
#| echo: false

retention_2020_2 <- bind_rows(retention_2020_2.1,
                              retention_2020_2.2,
                              retention_2020_2.3,
                              retention_2020_2.4,
                              retention_2020_2.5,
                              retention_2020_2.6,
                              retention_2020_2.7) %>%
  mutate(year = 2020)
write_csv(retention_2020_2,
          file = "datasets/retention_2020_2.csv")

print(retention_2020_2)

```

### 2021

Retrieving audience retention data of videos from subtopic 2.1 Fungsi with `start_date` 2021-08-22 and `end_date` 2021-12-31. The data was retrieved on 7 January 2024. The code used for retrieving data from Youtube Analytics and Reporting API were as follows.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3D7g35w-sL_JA%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_2.1.1 <- fromJSON("datasets/retention_2021_7g35w-sL_JA.json",
                             flatten = TRUE)
ret21_json_2.1.2 <- fromJSON("datasets/retention_2021_a3pMCY75leA.json",
                             flatten = TRUE)
ret21_json_2.1.3 <- fromJSON("datasets/retention_2021_qmTXyVwt0F4.json",
                             flatten = TRUE)
ret21_json_2.1.4 <- fromJSON("datasets/retention_2021_BB7a6alY_Kg.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_2.1 <- rbind_pages(
  list(as.data.frame(ret21_json_2.1.1$rows),
       as.data.frame(ret21_json_2.1.2$rows),
       as.data.frame(ret21_json_2.1.3$rows),
       as.data.frame(ret21_json_2.1.4$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_2.1[,c(2, 3, 4)] = apply(retention_2021_2.1[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_2.1)
```

Retrieving audience retention data of videos from subtopic 2.2 Grafik Fungsi for the 2021. The data was retrieved on 7 January 2024.

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_2.2.1 <- fromJSON("datasets/retention_2021_aHo1kbccgLM.json",
                             flatten = TRUE)
ret21_json_2.2.2 <- fromJSON("datasets/retention_2021_Lmx4Bc7WhHU.json",
                             flatten = TRUE)
ret21_json_2.2.3 <- fromJSON("datasets/retention_2021_Aa1Zd1nqAaM.json",
                             flatten = TRUE)
ret21_json_2.2.4 <- fromJSON("datasets/retention_2021_2Xjq_Rc8csw.json",
                             flatten = TRUE)
ret21_json_2.2.5 <- fromJSON("datasets/retention_2021_n_QVgE8mGic.json",
                             flatten = TRUE)
ret21_json_2.2.6 <- fromJSON("datasets/retention_2021_aMwB3YzdnLY.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_2.2 <- rbind_pages(
  list(as.data.frame(ret21_json_2.2.1$rows),
       as.data.frame(ret21_json_2.2.2$rows),
       as.data.frame(ret21_json_2.2.3$rows),
       as.data.frame(ret21_json_2.2.4$rows),
       as.data.frame(ret21_json_2.2.5$rows),
       as.data.frame(ret21_json_2.2.6$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_2.2[,c(2, 3, 4)] = apply(retention_2021_2.2[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_2.2)
```

Retrieving audience retention data of videos from subtopic 2.3 Informasi Penting Grafik Fungsi. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DMD5LDDmH3Lo%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_2.3.1 <- fromJSON("datasets/retention_2021_MD5LDDmH3Lo.json",
                             flatten = TRUE)
ret21_json_2.3.2 <- fromJSON("datasets/retention_2021_pSPHTfd-GA4.json",
                             flatten = TRUE)
ret21_json_2.3.3 <- fromJSON("datasets/retention_2021_288bRpvZSsg.json",
                             flatten = TRUE)
ret21_json_2.3.4 <- fromJSON("datasets/retention_2021_AmIW3vUhY0E.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_2.3 <- rbind_pages(
  list(as.data.frame(ret21_json_2.3.1$rows),
       as.data.frame(ret21_json_2.3.2$rows),
       as.data.frame(ret21_json_2.3.3$rows),
       as.data.frame(ret21_json_2.3.4$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_2.3[,c(2, 3, 4)] = apply(retention_2021_2.3[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_2.3)
```

Retrieving audience retention data of videos from subtopic 2.4 Fungsi Linear dan Modelnya. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DLIkQgdMtovQ%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_2.4.1 <- fromJSON("datasets/retention_2021_LIkQgdMtovQ.json",
                             flatten = TRUE)
ret21_json_2.4.2 <- fromJSON("datasets/retention_2021_b8SV9Xk5P0Q.json",
                             flatten = TRUE)
ret21_json_2.4.3 <- fromJSON("datasets/retention_2021_tsca4HeUPyA.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_2.4 <- rbind_pages(
  list(as.data.frame(ret21_json_2.4.1$rows),
       as.data.frame(ret21_json_2.4.2$rows),
       as.data.frame(ret21_json_2.4.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_2.4[,c(2, 3, 4)] = apply(retention_2021_2.4[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_2.4)
```

Retrieving audience retention data of videos from subtopic 2.5 Transformasi Fungsi. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DBYRBjDIZSZo%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_2.5.1 <- fromJSON("datasets/retention_2021_jytZgg-oQyM.json",
                             flatten = TRUE)
ret21_json_2.5.2 <- fromJSON("datasets/retention_2021_rZEOxQWltIs.json",
                             flatten = TRUE)
ret21_json_2.5.3 <- fromJSON("datasets/retention_2021_5flm8zGveZ8.json",
                             flatten = TRUE)
ret21_json_2.5.4 <- fromJSON("datasets/retention_2021_d2wI1ikAAlg.json",
                             flatten = TRUE)
ret21_json_2.5.5 <- fromJSON("datasets/retention_2021_A4gZgqEKshw.json",
                             flatten = TRUE)
ret21_json_2.5.6 <- fromJSON("datasets/retention_2021_BYRBjDIZSZo.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_2.5 <- rbind_pages(
  list(as.data.frame(ret21_json_2.5.1$rows),
       as.data.frame(ret21_json_2.5.2$rows),
       as.data.frame(ret21_json_2.5.3$rows),
       as.data.frame(ret21_json_2.5.4$rows),
       as.data.frame(ret21_json_2.5.5$rows),
       as.data.frame(ret21_json_2.5.6$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_2.5[,c(2, 3, 4)] = apply(retention_2021_2.5[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_2.5)
```

Retrieving audience retention data of videos from subtopic 2.6 Kombinasi Beberapa Fungsi. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DIYSIzMNvT0k%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_2.6.1 <- fromJSON("datasets/retention_2021_oKlJDBsc_A0.json",
                             flatten = TRUE)
ret21_json_2.6.2 <- fromJSON("datasets/retention_2021_FRgbKVwKp3M.json",
                             flatten = TRUE)
ret21_json_2.6.3 <- fromJSON("datasets/retention_2021_IYSIzMNvT0k.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_2.6 <- rbind_pages(
  list(as.data.frame(ret21_json_2.6.1$rows),
       as.data.frame(ret21_json_2.6.2$rows),
       as.data.frame(ret21_json_2.6.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_2.6[,c(2, 3, 4)] = apply(retention_2021_2.6[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_2.6)
```

Retrieving audience retention data of videos from subtopic 2.7 Fungsi Satu-Satu dan Inversnya. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DriRa1fv7XAo%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_2.7.1 <- fromJSON("datasets/retention_2021_hcUC4IFisL4.json",
                             flatten = TRUE)
ret21_json_2.7.2 <- fromJSON("datasets/retention_2021_o7p5-2gqPc4.json",
                             flatten = TRUE)
ret21_json_2.7.3 <- fromJSON("datasets/retention_2021_k_krAa5BcUc.json",
                             flatten = TRUE)
ret21_json_2.7.4 <- fromJSON("datasets/retention_2021_2Ftvle6k9as.json",
                             flatten = TRUE)
ret21_json_2.7.5 <- fromJSON("datasets/retention_2021_riRa1fv7XAo.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_2.7 <- rbind_pages(
  list(as.data.frame(ret21_json_2.7.1$rows),
       as.data.frame(ret21_json_2.7.2$rows),
       as.data.frame(ret21_json_2.7.3$rows),
       as.data.frame(ret21_json_2.7.4$rows),
       as.data.frame(ret21_json_2.7.5$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_2.7[,c(2, 3, 4)] = apply(retention_2021_2.7[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_2.7)
```

Combining subtopic data into one topic.

```{r}
#| echo: false

retention_2021_2 <- bind_rows(retention_2021_2.1,
                              retention_2021_2.2,
                              retention_2021_2.3,
                              retention_2021_2.4,
                              retention_2021_2.5,
                              retention_2021_2.6,
                              retention_2021_2.7) %>% 
  mutate(year = 2021)
write_csv(retention_2021_2,
          file = "datasets/retention_2021_2.csv")

print(retention_2021_2)

```

### Two Year Data

```{r}
retention_2 <- bind_rows(retention_2020_2,
                         retention_2021_2)

write_csv(retention_2,
          file = "datasets/retention_2.csv")

print(retention_2)
```

## Rational Functions

### 2020

Retrieving audience retention data of videos from subtopic 3.1 Fungsi Rasional. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DfS8JmmjCg4Y%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_3.1.1 <- fromJSON("datasets/retention_2020_fS8JmmjCg4Y.json",
                             flatten = TRUE)
ret20_json_3.1.2 <- fromJSON("datasets/retention_2020_BSlzOjW5gsQ.json",
                             flatten = TRUE)
ret20_json_3.1.3 <- fromJSON("datasets/retention_2020_LSsfEfKJPUA.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_3.1 <- rbind_pages(
  list(as.data.frame(ret20_json_3.1.1$rows),
       as.data.frame(ret20_json_3.1.2$rows),
       as.data.frame(ret20_json_3.1.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_3.1[,c(2, 3, 4)] = apply(retention_2020_3.1[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_3.1)
```

Retrieving audience retention data of videos from subtopic 3.2 Grafik Fungsi Rasional. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DTeJ_Dht6N4E%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_3.2.1 <- fromJSON("datasets/retention_2020_7Ji0rZA-D7k.json",
                             flatten = TRUE)
ret20_json_3.2.2 <- fromJSON("datasets/retention_2020_BZsxf1LWa38.json",
                             flatten = TRUE)
ret20_json_3.2.3 <- fromJSON("datasets/retention_2020_Kx-urubrfl4.json",
                             flatten = TRUE)
ret20_json_3.2.4 <- fromJSON("datasets/retention_2020_TeJ_Dht6N4E.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_3.2 <- rbind_pages(
  list(as.data.frame(ret20_json_3.2.1$rows),
       as.data.frame(ret20_json_3.2.2$rows),
       as.data.frame(ret20_json_3.2.3$rows),
       as.data.frame(ret20_json_3.2.4$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_3.2[,c(2, 3, 4)] = apply(retention_2020_3.2[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_3.2)
```

Retrieving audience retention data of videos from subtopic 3.3 Pertidaksamaan Rasional. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DyA9kwmITnkk%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_3.3.1 <- fromJSON("datasets/retention_2020_quoIHoqCJs4.json",
                             flatten = TRUE)
ret20_json_3.3.2 <- fromJSON("datasets/retention_2020_yA9kwmITnkk.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_3.3 <- rbind_pages(
  list(as.data.frame(ret20_json_3.3.1$rows),
       as.data.frame(ret20_json_3.3.2$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_3.3[,c(2, 3, 4)] = apply(retention_2020_3.3[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_3.3)
```

Combining subtopics into one topic data.

```{r}
#| echo: false

retention_2020_3 <- bind_rows(retention_2020_3.1,
                              retention_2020_3.2,
                              retention_2020_3.3) %>%
  mutate(year = 2020)
write_csv(retention_2020_3,
          file = "datasets/retention_2020_3.csv")

print(retention_2020_3)
```

### 2021

Retrieving audience retention data of videos from subtopic 3.1 Fungsi Rasional. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DLSsfEfKJPUA%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_3.1.1 <- fromJSON("datasets/retention_2021_fS8JmmjCg4Y.json",
                             flatten = TRUE)
ret21_json_3.1.2 <- fromJSON("datasets/retention_2021_BSlzOjW5gsQ.json",
                             flatten = TRUE)
ret21_json_3.1.3 <- fromJSON("datasets/retention_2021_LSsfEfKJPUA.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_3.1 <- rbind_pages(
  list(as.data.frame(ret21_json_3.1.1$rows),
       as.data.frame(ret21_json_3.1.2$rows),
       as.data.frame(ret21_json_3.1.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_3.1[,c(2, 3, 4)] = apply(retention_2021_3.1[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_3.1)
```

Retrieving audience retention data of videos from subtopic 3.2 Grafik Fungsi Rasional. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DTeJ_Dht6N4E%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_3.2.1 <- fromJSON("datasets/retention_2021_7Ji0rZA-D7k.json",
                             flatten = TRUE)
ret21_json_3.2.2 <- fromJSON("datasets/retention_2021_BZsxf1LWa38.json",
                             flatten = TRUE)
ret21_json_3.2.3 <- fromJSON("datasets/retention_2021_Kx-urubrfl4.json",
                             flatten = TRUE)
ret21_json_3.2.4 <- fromJSON("datasets/retention_2021_TeJ_Dht6N4E.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_3.2 <- rbind_pages(
  list(as.data.frame(ret21_json_3.2.1$rows),
       as.data.frame(ret21_json_3.2.2$rows),
       as.data.frame(ret21_json_3.2.3$rows),
       as.data.frame(ret21_json_3.2.4$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_3.2[,c(2, 3, 4)] = apply(retention_2021_3.2[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_3.2)
```

Retrieving audience retention data of videos from subtopic 3.3 Pertidaksamaan Rasional. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DyA9kwmITnkk%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_3.3.1 <- fromJSON("datasets/retention_2021_quoIHoqCJs4.json",
                             flatten = TRUE)
ret21_json_3.3.2 <- fromJSON("datasets/retention_2021_yA9kwmITnkk.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_3.3 <- rbind_pages(
  list(as.data.frame(ret21_json_3.3.1$rows),
       as.data.frame(ret21_json_3.3.2$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_3.3[,c(2, 3, 4)] = apply(retention_2021_3.3[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_3.3)
```

Combining subtopics into one topic data.

```{r}
#| echo: false

retention_2021_3 <- bind_rows(retention_2021_3.1,
                              retention_2021_3.2,
                              retention_2021_3.3) %>%
  mutate(year = 2021)
write_csv(retention_2021_3,
          file = "datasets/retention_2021_3.csv")

print(retention_2021_3)
```

### Two Year Data

```{r}
retention_3 <- bind_rows(retention_2020_3,
                         retention_2021_3)

write_csv(retention_3,
          file = "datasets/retention_3.csv")

print(retention_3)
```

## Exponential and Logarithmic Functions

### 2020

Retrieving audience retention data of videos from subtopic 4.1 Fungsi Eksponen. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DOXRHUDd28uM%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_4.1.1 <- fromJSON("datasets/retention_2020_zG5DYRKRrRI.json",
                             flatten = TRUE)
ret20_json_4.1.2 <- fromJSON("datasets/retention_2020_h8FZ_H_zIlA.json",
                             flatten = TRUE)
ret20_json_4.1.3 <- fromJSON("datasets/retention_2020_OXRHUDd28uM.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_4.1 <- rbind_pages(
  list(as.data.frame(ret20_json_4.1.1$rows),
       as.data.frame(ret20_json_4.1.2$rows),
       as.data.frame(ret20_json_4.1.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_4.1[,c(2, 3, 4)] = apply(retention_2020_4.1[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_4.1)
```

Retrieving audience retention data of videos from subtopic 4.2 Fungsi Eksponen Alami. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DeJizsGLUFFw%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_4.2.1 <- fromJSON("datasets/retention_2020_s-HX0NcVGco.json",
                             flatten = TRUE)
ret20_json_4.2.2 <- fromJSON("datasets/retention_2020_eJizsGLUFFw.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_4.2 <- rbind_pages(
  list(as.data.frame(ret20_json_4.2.1$rows),
       as.data.frame(ret20_json_4.2.2$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_4.2[,c(2, 3, 4)] = apply(retention_2020_4.2[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_4.2)
```

Retrieving audience retention data of videos from subtopic 4.3 Fungsi Logaritma. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DdPNrkm12e5M%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_4.3.1 <- fromJSON("datasets/retention_2020_wjQracmCEag.json",
                             flatten = TRUE)
ret20_json_4.3.2 <- fromJSON("datasets/retention_2020_r5Xkh25jgwY.json",
                             flatten = TRUE)
ret20_json_4.3.3 <- fromJSON("datasets/retention_2020_OiE3M7m9dxs.json",
                             flatten = TRUE)
ret20_json_4.3.4 <- fromJSON("datasets/retention_2020_dPNrkm12e5M.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_4.3 <- rbind_pages(
  list(as.data.frame(ret20_json_4.3.1$rows),
       as.data.frame(ret20_json_4.3.2$rows),
       as.data.frame(ret20_json_4.3.3$rows),
       as.data.frame(ret20_json_4.3.4$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_4.3[,c(2, 3, 4)] = apply(retention_2020_4.3[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_4.3)
```

Retrieving audience retention data of videos from subtopic 4.4 Sifat-Sifat Logaritma. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DIaUXOCf73Lg%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_4.4.1 <- fromJSON("datasets/retention_2020_WnE0IIO0EQ0.json",
                             flatten = TRUE)
ret20_json_4.4.2 <- fromJSON("datasets/retention_2020_wMzpIezHdcs.json",
                             flatten = TRUE)
ret20_json_4.4.3 <- fromJSON("datasets/retention_2020_IaUXOCf73Lg.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_4.4 <- rbind_pages(
  list(as.data.frame(ret20_json_4.4.1$rows),
       as.data.frame(ret20_json_4.4.2$rows),
       as.data.frame(ret20_json_4.4.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_4.4[,c(2, 3, 4)] = apply(retention_2020_4.4[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_4.4)
```

Retrieving audience retention data of videos from subtopic 4.5 Persamaan-Persamaan Eksponen dan Logaritma. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DoHE0GKd5AZI%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_4.5.1 <- fromJSON("datasets/retention_2020_gcx2CLY3GD4.json",
                             flatten = TRUE)
ret20_json_4.5.2 <- fromJSON("datasets/retention_2020_oHE0GKd5AZI.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_4.5 <- rbind_pages(
  list(as.data.frame(ret20_json_4.5.1$rows),
       as.data.frame(ret20_json_4.5.2$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_4.5[,c(2, 3, 4)] = apply(retention_2020_4.5[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_4.5)
```

Combining subtopics into one topic data.

```{r}
#| echo: false

retention_2020_4 <- bind_rows(retention_2020_4.1,
                              retention_2020_4.2,
                              retention_2020_4.3,
                              retention_2020_4.4,
                              retention_2020_4.5
                              ) %>%
  mutate(year = 2020)
write_csv(retention_2020_4,
          file = "datasets/retention_2020_4.csv")

print(retention_2020_4)
```

### 2021

Retrieving audience retention data of videos from subtopic 4.1 Fungsi Eksponen. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DOXRHUDd28uM%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_4.1.1 <- fromJSON("datasets/retention_2021_zG5DYRKRrRI.json",
                             flatten = TRUE)
ret21_json_4.1.2 <- fromJSON("datasets/retention_2021_h8FZ_H_zIlA.json",
                             flatten = TRUE)
ret21_json_4.1.3 <- fromJSON("datasets/retention_2021_OXRHUDd28uM.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_4.1 <- rbind_pages(
  list(as.data.frame(ret21_json_4.1.1$rows),
       as.data.frame(ret21_json_4.1.2$rows),
       as.data.frame(ret21_json_4.1.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_4.1[,c(2, 3, 4)] = apply(retention_2021_4.1[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_4.1)
```

Retrieving audience retention data of videos from subtopic 4.2 Fungsi Eksponen Alami. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DeJizsGLUFFw%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_4.2.1 <- fromJSON("datasets/retention_2021_s-HX0NcVGco.json",
                             flatten = TRUE)
ret21_json_4.2.2 <- fromJSON("datasets/retention_2021_eJizsGLUFFw.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_4.2 <- rbind_pages(
  list(as.data.frame(ret21_json_4.2.1$rows),
       as.data.frame(ret21_json_4.2.2$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_4.2[,c(2, 3, 4)] = apply(retention_2021_4.2[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_4.2)
```

Retrieving audience retention data of videos from subtopic 4.3 Fungsi Logaritma. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DdPNrkm12e5M%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_4.3.1 <- fromJSON("datasets/retention_2021_wjQracmCEag.json",
                             flatten = TRUE)
ret21_json_4.3.2 <- fromJSON("datasets/retention_2021_r5Xkh25jgwY.json",
                             flatten = TRUE)
ret21_json_4.3.3 <- fromJSON("datasets/retention_2021_OiE3M7m9dxs.json",
                             flatten = TRUE)
ret21_json_4.3.4 <- fromJSON("datasets/retention_2021_dPNrkm12e5M.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_4.3 <- rbind_pages(
  list(as.data.frame(ret21_json_4.3.1$rows),
       as.data.frame(ret21_json_4.3.2$rows),
       as.data.frame(ret21_json_4.3.3$rows),
       as.data.frame(ret21_json_4.3.4$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_4.3[,c(2, 3, 4)] = apply(retention_2021_4.3[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_4.3)
```

Retrieving audience retention data of videos from subtopic 4.4 Sifat-Sifat Logaritma. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DIaUXOCf73Lg%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_4.4.1 <- fromJSON("datasets/retention_2021_WnE0IIO0EQ0.json",
                             flatten = TRUE)
ret21_json_4.4.2 <- fromJSON("datasets/retention_2021_wMzpIezHdcs.json",
                             flatten = TRUE)
ret21_json_4.4.3 <- fromJSON("datasets/retention_2021_IaUXOCf73Lg.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_4.4 <- rbind_pages(
  list(as.data.frame(ret21_json_4.4.1$rows),
       as.data.frame(ret21_json_4.4.2$rows),
       as.data.frame(ret21_json_4.4.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_4.4[,c(2, 3, 4)] = apply(retention_2021_4.4[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_4.4)
```

Retrieving audience retention data of videos from subtopic 4.5 Persamaan-Persamaan Eksponen dan Logaritma. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DoHE0GKd5AZI%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_4.5.1 <- fromJSON("datasets/retention_2021_gcx2CLY3GD4.json",
                             flatten = TRUE)
ret21_json_4.5.2 <- fromJSON("datasets/retention_2021_oHE0GKd5AZI.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_4.5 <- rbind_pages(
  list(as.data.frame(ret21_json_4.5.1$rows),
       as.data.frame(ret21_json_4.5.2$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_4.5[,c(2, 3, 4)] = apply(retention_2021_4.5[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_4.5)
```

Combining subtopics into one topic data.

```{r}
#| echo: false

retention_2021_4 <- bind_rows(retention_2021_4.1,
                              retention_2021_4.2,
                              retention_2021_4.3,
                              retention_2021_4.4,
                              retention_2021_4.5
                              ) %>%
  mutate(year = 2021)
write_csv(retention_2021_4,
          file = "datasets/retention_2021_4.csv")

print(retention_2021_4)
```

### Two Year Data

```{r}
retention_4 <- bind_rows(retention_2020_4,
                         retention_2021_4)

write_csv(retention_4,
          file = "datasets/retention_4.csv")

print(retention_4)
```

## Trigonometric Functions

### 2020

Retrieving audience retention data of videos from subtopic 5.1 Sudut dan Ukuran Sudut. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3Dmu7OfNdCBE8%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_5.1.1 <- fromJSON("datasets/retention_2020_U6jWizrcoaw.json",
                             flatten = TRUE)
ret20_json_5.1.2 <- fromJSON("datasets/retention_2020_mu7OfNdCBE8.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_5.1 <- rbind_pages(
  list(as.data.frame(ret20_json_5.1.1$rows),
       as.data.frame(ret20_json_5.1.2$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_5.1[,c(2, 3, 4)] = apply(retention_2020_5.1[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_5.1)
```

Retrieving audience retention data of videos from subtopic 5.2 Trigonometri Segitiga Siku-Siku. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DEdiLL3J89eI%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_5.2.1 <- fromJSON("datasets/retention_2020_3MQ47s45dnU.json",
                             flatten = TRUE)
ret20_json_5.2.2 <- fromJSON("datasets/retention_2020_44Cbhd1PnWI.json",
                             flatten = TRUE)
ret20_json_5.2.3 <- fromJSON("datasets/retention_2020_EdiLL3J89eI.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_5.2 <- rbind_pages(
  list(as.data.frame(ret20_json_5.2.1$rows),
       as.data.frame(ret20_json_5.2.2$rows),
       as.data.frame(ret20_json_5.2.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_5.2[,c(2, 3, 4)] = apply(retention_2020_5.2[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_5.2)
```

Retrieving audience retention data of videos from subtopic 5.3 Fungsi Trigonometri Sembarang Sudut. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DkgQncoPA9zE%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_5.3.1 <- fromJSON("datasets/retention_2020_bn91Bs6pE1o.json",
                             flatten = TRUE)
ret20_json_5.3.2 <- fromJSON("datasets/retention_2020_ZtY3D3hKjXk.json",
                             flatten = TRUE)
ret20_json_5.3.3 <- fromJSON("datasets/retention_2020_tRAaFUTA_-A.json",
                             flatten = TRUE)
ret20_json_5.3.4 <- fromJSON("datasets/retention_2020_POXB-v2vNlo.json",
                             flatten = TRUE)
ret20_json_5.3.5 <- fromJSON("datasets/retention_2020_kgQncoPA9zE.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_5.3 <- rbind_pages(
  list(as.data.frame(ret20_json_5.3.1$rows),
       as.data.frame(ret20_json_5.3.2$rows),
       as.data.frame(ret20_json_5.3.3$rows),
       as.data.frame(ret20_json_5.3.4$rows),
       as.data.frame(ret20_json_5.3.5$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_5.3[,c(2, 3, 4)] = apply(retention_2020_5.3[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_5.3)
```

Retrieving audience retention data of videos from subtopic 5.4 Grafik Fungsi Trigonometri. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DzW6ATi1uYhk%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret20_json_5.4.1 <- fromJSON("datasets/retention_2020_Zk_xFgb6Y7Y.json",
                             flatten = TRUE)
ret20_json_5.4.2 <- fromJSON("datasets/retention_2020_zNyioBkGDUU.json",
                             flatten = TRUE)
ret20_json_5.4.3 <- fromJSON("datasets/retention_2020_zW6ATi1uYhk.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2020_5.4 <- rbind_pages(
  list(as.data.frame(ret20_json_5.4.1$rows),
       as.data.frame(ret20_json_5.4.2$rows),
       as.data.frame(ret20_json_5.4.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2020_5.4[,c(2, 3, 4)] = apply(retention_2020_5.4[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2020_5.4)
```

Combining subtopics into topic data.

```{r}
#| echo: false

retention_2020_5 <- bind_rows(retention_2020_5.1,
                              retention_2020_5.2,
                              retention_2020_5.3,
                              retention_2020_5.4
                              ) %>%
  mutate(year = 2020)
write_csv(retention_2020_5,
          file = "datasets/retention_2020_5.csv")

print(retention_2020_5)
```

### 2021

Retrieving audience retention data of videos from subtopic 5.1 Sudut dan Ukuran Sudut. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3Dmu7OfNdCBE8%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_5.1.1 <- fromJSON("datasets/retention_2021_U6jWizrcoaw.json",
                             flatten = TRUE)
ret21_json_5.1.2 <- fromJSON("datasets/retention_2021_mu7OfNdCBE8.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_5.1 <- rbind_pages(
  list(as.data.frame(ret21_json_5.1.1$rows),
       as.data.frame(ret21_json_5.1.2$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_5.1[,c(2, 3, 4)] = apply(retention_2021_5.1[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_5.1)
```

Retrieving audience retention data of videos from subtopic 5.2 Trigonometri Segitiga Siku-Siku. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DEdiLL3J89eI%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_5.2.1 <- fromJSON("datasets/retention_2021_3MQ47s45dnU.json",
                             flatten = TRUE)
ret21_json_5.2.2 <- fromJSON("datasets/retention_2021_44Cbhd1PnWI.json",
                             flatten = TRUE)
ret21_json_5.2.3 <- fromJSON("datasets/retention_2021_EdiLL3J89eI.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_5.2 <- rbind_pages(
  list(as.data.frame(ret21_json_5.2.1$rows),
       as.data.frame(ret21_json_5.2.2$rows),
       as.data.frame(ret21_json_5.2.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_5.2[,c(2, 3, 4)] = apply(retention_2021_5.2[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_5.2)
```

Retrieving audience retention data of videos from subtopic 5.3 Fungsi Trigonometri Sembarang Sudut. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2021-12-31&filters=video%3D%3DkgQncoPA9zE%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_5.3.1 <- fromJSON("datasets/retention_2021_bn91Bs6pE1o.json",
                             flatten = TRUE)
ret21_json_5.3.2 <- fromJSON("datasets/retention_2021_ZtY3D3hKjXk.json",
                             flatten = TRUE)
ret21_json_5.3.3 <- fromJSON("datasets/retention_2021_tRAaFUTA_-A.json",
                             flatten = TRUE)
ret21_json_5.3.4 <- fromJSON("datasets/retention_2021_POXB-v2vNlo.json",
                             flatten = TRUE)
ret21_json_5.3.5 <- fromJSON("datasets/retention_2021_kgQncoPA9zE.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_5.3 <- rbind_pages(
  list(as.data.frame(ret21_json_5.3.1$rows),
       as.data.frame(ret21_json_5.3.2$rows),
       as.data.frame(ret21_json_5.3.3$rows),
       as.data.frame(ret21_json_5.3.4$rows),
       as.data.frame(ret21_json_5.3.5$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_5.3[,c(2, 3, 4)] = apply(retention_2021_5.3[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_5.3)
```

Retrieving audience retention data of videos from subtopic 5.4 Grafik Fungsi Trigonometri. The data was retrieved on 7 January 2024 from Youtube API Explorer with these codes.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2CelapsedVideoTimeRatio&endDate=2020-12-31&filters=video%3D%3DzW6ATi1uYhk%3BaudienceType%3D%3DORGANIC&ids=channel%3D%3DMINE&metrics=audienceWatchRatio%2CrelativeRetentionPerformance&startDate=2020-10-07&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}
#| echo: false

# Creating lists from JSON files
ret21_json_5.4.1 <- fromJSON("datasets/retention_2021_Zk_xFgb6Y7Y.json",
                             flatten = TRUE)
ret21_json_5.4.2 <- fromJSON("datasets/retention_2021_zNyioBkGDUU.json",
                             flatten = TRUE)
ret21_json_5.4.3 <- fromJSON("datasets/retention_2021_zW6ATi1uYhk.json",
                             flatten = TRUE)

# Combining dataframes into a tibble
retention_2021_5.4 <- rbind_pages(
  list(as.data.frame(ret21_json_5.4.1$rows),
       as.data.frame(ret21_json_5.4.2$rows),
       as.data.frame(ret21_json_5.4.3$rows))
) %>% 
  tibble() %>% 
  rename(vid_id = V1,
         elapsed_time_ratio = V2,
         audience_watch_ratio = V3,
         relative_retention_performance = V4)

retention_2021_5.4[,c(2, 3, 4)] = apply(retention_2021_5.4[,c(2, 3, 4)], 2,
                                    function(x)
                                      as.numeric(as.character(x)))

print(retention_2021_5.4)
```

Combining subtopics into topic data.

```{r}
#| echo: false

retention_2021_5 <- bind_rows(retention_2021_5.1,
                              retention_2021_5.2,
                              retention_2021_5.3,
                              retention_2021_5.4
                              ) %>%
  mutate(year = 2021)

write_csv(retention_2021_5,
          file = "datasets/retention_2021_5.csv")

print(retention_2021_5)
```

### Two Year Data

```{r}
retention_5 <- bind_rows(retention_2020_5,
                         retention_2021_5)

write_csv(retention_5,
          file = "datasets/retention_5.csv")

print(retention_5)
```

## Combination of Retention Data

```{r}
retention <- bind_rows(retention_2,
                       retention_3,
                       retention_4,
                       retention_5)

write_csv(retention,
          file = "datasets/retention.csv")

print(retention)
```

# Video Statistics

Statistics of all videos were gathered by using Youtube Analytics and Reporting API with this code.

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2Cday&endDate=2020-12-31&filters=video%3D%3Dy7zRv0bPAt4%2C8_HqAYKZZ_I%2CerrB7Ku0HyQ%2CL60C_wcLDHU%2CJv4y4Z4zeRc%2C7Ak8vzFzN_Y%2Cvr7jLRIA7C0%2CqxsXKYJRgJI%2CnV01VpbjQLQ%2Ckny1ZHg4tyM%2C2Wsb2KmeD04%2Cu-qsNS-65pQ%2ChQTDiy0X4eo%2CWZVKP14QVgo%2CDRr8kXo0Agg%2Cbr341Djn3_0%2CKJKYkGivPi8%2CQS8l0H1BGjY%2CRF1chK7xiX0%2C9KVzGWFEufI%2CPcSTCsI6zUk%2CuDQAWZsh3ns%2CqXBG2JV7tms%2Cv4NPzGXcbaw%2Cfm6Dv9POaQk%2C7g35w-sL_JA%2Ca3pMCY75leA%2CqmTXyVwt0F4%2CBB7a6alY_Kg%2CaHo1kbccgLM%2CLmx4Bc7WhHU%2CAa1Zd1nqAaM%2C2Xjq_Rc8csw%2Cn_QVgE8mGic%2CaMwB3YzdnLY%2CMD5LDDmH3Lo%2CpSPHTfd-GA4%2C288bRpvZSsg%2CAmIW3vUhY0E%2CLIkQgdMtovQ%2Cb8SV9Xk5P0Q%2Ctsca4HeUPyA%2CjytZgg-oQyM%2CrZEOxQWltIs%2C5flm8zGveZ8%2Cd2wI1ikAAlg%2CA4gZgqEKshw%2CBYRBjDIZSZo%2CoKlJDBsc_A0%2CFRgbKVwKp3M%2CIYSIzMNvT0k%2ChcUC4IFisL4%2Co7p5-2gqPc4%2Ck_krAa5BcUc%2C2Ftvle6k9as%2CriRa1fv7XAo%2CfS8JmmjCg4Y%2CBSlzOjW5gsQ%2CLSsfEfKJPUA%2C7Ji0rZA-D7k%2CBZsxf1LWa38%2CKx-urubrfl4%2CTeJ_Dht6N4E%2CquoIHoqCJs4%2CyA9kwmITnkk%2CzG5DYRKRrRI%2Ch8FZ_H_zIlA%2COXRHUDd28uM%2Cs-HX0NcVGco%2CeJizsGLUFFw%2CwjQracmCEag%2Cr5Xkh25jgwY%2COiE3M7m9dxs%2CdPNrkm12e5M%2CWnE0IIO0EQ0%2CwMzpIezHdcs%2CIaUXOCf73Lg%2Cgcx2CLY3GD4%2CoHE0GKd5AZI%2CU6jWizrcoaw%2Cmu7OfNdCBE8%2C3MQ47s45dnU%2C44Cbhd1PnWI%2CEdiLL3J89eI%2Cbn91Bs6pE1o%2CZtY3D3hKjXk%2CtRAaFUTA_-A%2CPOXB-v2vNlo%2CkgQncoPA9zE%2CZk_xFgb6Y7Y%2CzNyioBkGDUU%2CzW6ATi1uYhk&ids=channel%3D%3DMINE&metrics=views%2CestimatedMinutesWatched%2Clikes%2Cdislikes%2Ccomments%2Cshares&sort=day&startDate=2020-09-14&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```         
curl \
  'https://youtubeanalytics.googleapis.com/v2/reports?dimensions=video%2Cday&endDate=2021-12-31&filters=video%3D%3Dy7zRv0bPAt4%2C8_HqAYKZZ_I%2CerrB7Ku0HyQ%2CL60C_wcLDHU%2CJv4y4Z4zeRc%2C7Ak8vzFzN_Y%2Cvr7jLRIA7C0%2CqxsXKYJRgJI%2CnV01VpbjQLQ%2Ckny1ZHg4tyM%2C2Wsb2KmeD04%2Cu-qsNS-65pQ%2ChQTDiy0X4eo%2CWZVKP14QVgo%2CDRr8kXo0Agg%2Cbr341Djn3_0%2CKJKYkGivPi8%2CQS8l0H1BGjY%2CRF1chK7xiX0%2C9KVzGWFEufI%2CPcSTCsI6zUk%2CuDQAWZsh3ns%2CqXBG2JV7tms%2Cv4NPzGXcbaw%2Cfm6Dv9POaQk%2C7g35w-sL_JA%2Ca3pMCY75leA%2CqmTXyVwt0F4%2CBB7a6alY_Kg%2CaHo1kbccgLM%2CLmx4Bc7WhHU%2CAa1Zd1nqAaM%2C2Xjq_Rc8csw%2Cn_QVgE8mGic%2CaMwB3YzdnLY%2CMD5LDDmH3Lo%2CpSPHTfd-GA4%2C288bRpvZSsg%2CAmIW3vUhY0E%2CLIkQgdMtovQ%2Cb8SV9Xk5P0Q%2Ctsca4HeUPyA%2CjytZgg-oQyM%2CrZEOxQWltIs%2C5flm8zGveZ8%2Cd2wI1ikAAlg%2CA4gZgqEKshw%2CBYRBjDIZSZo%2CoKlJDBsc_A0%2CFRgbKVwKp3M%2CIYSIzMNvT0k%2ChcUC4IFisL4%2Co7p5-2gqPc4%2Ck_krAa5BcUc%2C2Ftvle6k9as%2CriRa1fv7XAo%2CfS8JmmjCg4Y%2CBSlzOjW5gsQ%2CLSsfEfKJPUA%2C7Ji0rZA-D7k%2CBZsxf1LWa38%2CKx-urubrfl4%2CTeJ_Dht6N4E%2CquoIHoqCJs4%2CyA9kwmITnkk%2CzG5DYRKRrRI%2Ch8FZ_H_zIlA%2COXRHUDd28uM%2Cs-HX0NcVGco%2CeJizsGLUFFw%2CwjQracmCEag%2Cr5Xkh25jgwY%2COiE3M7m9dxs%2CdPNrkm12e5M%2CWnE0IIO0EQ0%2CwMzpIezHdcs%2CIaUXOCf73Lg%2Cgcx2CLY3GD4%2CoHE0GKd5AZI%2CU6jWizrcoaw%2Cmu7OfNdCBE8%2C3MQ47s45dnU%2C44Cbhd1PnWI%2CEdiLL3J89eI%2Cbn91Bs6pE1o%2CZtY3D3hKjXk%2CtRAaFUTA_-A%2CPOXB-v2vNlo%2CkgQncoPA9zE%2CZk_xFgb6Y7Y%2CzNyioBkGDUU%2CzW6ATi1uYhk&ids=channel%3D%3DMINE&metrics=views%2CestimatedMinutesWatched%2Clikes%2Cdislikes%2Ccomments%2Cshares&sort=day&startDate=2021-08-22&key=[YOUR_API_KEY]' \
  --header 'Authorization: Bearer [YOUR_ACCESS_TOKEN]' \
  --header 'Accept: application/json' \
  --compressed
```

```{r}

# For the year 2020
video_stat_2020 <- fromJSON("datasets/video_stat_2020.json",
                            flatten = TRUE)
stat_colnames <- c(as.character(video_stat_2020$columnHeaders$name))

video_stat_2020 <- as.data.frame(video_stat_2020$rows)
colnames(video_stat_2020) <- stat_colnames
video_stat_2020 <- video_stat_2020 %>% 
  tibble() %>% 
  mutate(day = ymd(day),
         views = as.numeric(as.character(views)),
         estimatedMinutesWatched = as.numeric(as.character(estimatedMinutesWatched)),
         likes = as.numeric(as.character(likes)),
         dislikes = as.numeric(as.character(dislikes)),
         comments = as.numeric(as.character(comments)),
         shares = as.numeric(as.character(shares)),
         year = 2020)

# For the year 2021
video_stat_2021 <- fromJSON("datasets/video_stat_2021.json",
                            flatten = TRUE)

video_stat_2021 <- as.data.frame(video_stat_2021$rows)
colnames(video_stat_2021) <- stat_colnames
video_stat_2021 <- video_stat_2021 %>% 
  tibble() %>% 
  mutate(day = ymd(day),
         views = as.numeric(as.character(views)),
         estimatedMinutesWatched = as.numeric(as.character(estimatedMinutesWatched)),
         likes = as.numeric(as.character(likes)),
         dislikes = as.numeric(as.character(dislikes)),
         comments = as.numeric(as.character(comments)),
         shares = as.numeric(as.character(shares)),
         year = 2021)

# Combining data
video_stat <- bind_rows(video_stat_2020,
                        video_stat_2021)
write_csv(video_stat,
          file = "datasets/video_stat.csv")

```
